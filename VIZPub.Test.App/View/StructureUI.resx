<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgTree.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgTree.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACq
        DgAAAk1TRnQBSQFMAgEBBAEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEgBgABIP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AYgABHgE2Ab8B/wEe
        ATYBvwH/AR4BNgG/Af8BHgE2Ab8B/wEeATYBvwH/AR4BNgG/Af8BHgE2Ab8B/wFDAbABLgH/AUMBsAEu
        Af8BQwGwAS4B/wFDAbABLgH/AUMBsAEuAf8BQwGwAS4B/wFDAbABLgH/iAADLgFHA0kBiQFKAkgBkwJJ
        AUcBkQJJAUcBkQJJAUgBkgNFAY4DOQFqAkoBSQGMAkgBRwGSAUkCRwGRAUkCRwGRAUoCSAGTAUMCQgGL
        AxUBHgQAAR4BNgG/Af8BOQFXAv8BOQFXAv8BOQFXAv8BOQFXAv8BOQFXAv8BHgE2Ab8B/wFDAbABLgH/
        AWUB8AFIAf8BZQHwAUgB/wFlAfABSAH/AWUB8AFIAf8BZQHwAUgB/wFDAbABLgH/AUMBsAEuAf+EAANg
        AZ8B6gHnAeQB/wH3AfIB7AH/AfEB6wHlAf8B8QHrAeUB/wH2Ae8B6QH/AdMBzwHJAf8BgAJ/Af4B+gH2
        AfIB/wHxAesB5QH/AfAB6QHjAf8B8AHpAeMB/wH4AfAB6gH/AcABvAG4Af8DPgGNAwABAQEeATYBvwH/
        ATkBVwL/ATkBVwL/ATkBVwL/ATkBWAL/ATkBVwL/AR4BNgG/Af8BQwGwAS4B/wFlAfABSAH/AWUB8AFI
        Af8BZQHwAUgB/wFmAfABSAH/AWUB8AFIAf8BQwGwAS4B/wExAdwBGQH/AUMBsAEuAf+AAAFfAl4BnAHl
        AeMB4QH/AfYB8wHuAf8B8QHtAegB/wHxAe0B6AH/AfYB8gHsAf8B1AHRAcwB/wKSAZEB/wH1AfIB7wH/
        AfEB7AHoAf8B8AHrAecB/wHwAesB5wH/AfYB8QHtAf8BxwHEAcAB/wN/AeUDHgEtAR4BNgG/Af8BYgF1
        Av8BYgF1Av8BYgF1Av8BYQF1Av8BYgF1Av8BHgE2Ab8B/wFDAbABLgH/AYMB8QFwAf8BgwHxAXAB/wGD
        AfEBcAH/AYMB8AFwAf8BgwHxAXAB/wFDAbABLgH/ATEB3AEZAf8BQwGwAS4B/xAAAXEBIwFwAf84AAGZ
        ATMBAAH/MAABXwJeAZwB5wHmAeUB/wH8AfkB9wH/AfYB9AHxAf8B9gH0AfEB/wH7AfkB9gH/AdcB1gHT
        Af8CkAGPAf8B+AH3AfUB/wH3AfQB8QH/AfYB8wHwAf8B9gHzAfAB/wH9AfoB9gH/AccBxgHDAf8ClwGY
        AfMDJAE4AR4BNgG/Af8BowGkAfoB/wGiAaQB+gH/AaMBpAH6Af8BogGkAfoB/wGjAaQB+gH/AR4BNgG/
        Af8BQwGwAS4B/wGuAfIBqwH/Aa0B8gGqAf8BrgHyAasB/wGtAfIBqgH/Aa4B8gGrAf8BQwGwAS4B/wEx
        AdwBGQH/AUMBsAEuAf8MAAGpAU8BqAH/AYABLwF+Af8BdAEmAXQB/zAAAdcBmwFbAf8BmQEyAQAB/wGZ
        ATIBAAH/LAACYQFgAZ8D7hH/AuIB4QH/A5QB/wP+Ef8C0QHQAf8DlwHyAyQBNwEeATYBvwH/Ae0B5AL/
        Ae0B5AL/Ae0B5AL/Ae0B5AL/Ae0B5AL/AR4BNgG/Af8BQwGwAS4B/wHmAf0B7QH/AeYB/QHtAf8B5gH9
        Ae0B/wHmAf0B7QH/AeYB/QHtAf8BQwGwAS4B/wExAdwBGQH/AUMBsAEuAf8IAAGqAU8BqQH/AcwBZgHL
        Af8BfQEtAX0B/wGWATcBlQH/AXoBKgF5Af8oAAHYAZwBXAH/AdgBmwFaAf8BmQEyAQAB/wGZATIBAAH/
        AZkBMgEAAf8oAAJHAUYBeQOQAe0DzwH/A9IB/wPPAf8DzQH/A8MB/wGKAYsBigH+A58B9QPKAf8DzgH/
        A9EB/wPTAf8BwgLBAf8DmQHyAyMBNgEeATYBvwH/AR4BNgG/Af8BHgE2Ab8B/wEeATYBvwH/AR4BNgG/
        Af8BHgE2Ab8B/wEeATYBvwH/AUMBsAEuAf8BQwGwAS4B/wFDAbABLgH/AUMBsAEuAf8BQwGwAS4B/wFD
        AbABLgH/AUMBsAEuAf8BMQHcARkB/wFDAbABLgH/BAABqQFPAagB/wHTAWoB0gH/AdQBbQHTAf8BfgEv
        AX0B/wGfATsBnwH/AY4BNAGNAf8BfAEsAXsB/yAAAeIBtAGEAf8B2QGdAV0B/wHYAZsBWgH/AZkBMgEA
        Af8BmQEyAQAB/wGZATIBAAH/AZkBMgEAAf8oAAMUARsDVwGUA6sB6gOzAfcBugG5AbgB/wG7AboBuQH/
        AZABjwGNAfwDWwHQAaEBoAGeAfwCswGxAf8DpQHwA7EB6wO7AfQDbAHKAxMBGgQAAR4BNgG/Af8BogGk
        AfoB/wGiAaQB+gH/AbABhgEuAf8BsAGGAS4B/wGwAYYBLgH/AbABhgEuAf8BsAGGAS4B/wGwAYYBLgH/
        AbABhgEuAf8BrQHyAaoB/wGtAfIBqgH/Aa0B8gGqAf8BQwGwAS4B/wFDAbABLgH/AaoBUQGpAf8B0gFp
        AdEB/wHVAW4B1QH/Ab0BbwG8Af8B3gGYAd0B/wGPAUUBjgH/AZ0BOwGcAf8BfQEtAX0B/yAAAdsBogFm
        Af8B2AGbAVsB/wHpAbQBewH/AfwB1gGvAf8BtQFiATQB/wGZATIBAAH/AZkBMgEAAf8BmQEyAQAB/zAA
        A0wBhgHvAesB5wH/AeEB2wHVAf8B5QHfAdkB/wHqAeQB3gH/AekB4gHcAf8BtQGxAa0B/wM+AYgDDAEQ
        Aw4BEgMIAQsMAAEeATYBvwH/AR4BNgG/Af8BsAGGAS4B/wHwAbcBSAH/AfABtwFIAf8B8AG3AUgB/wHw
        AbcBSAH/AfABtwFIAf8BsAGGAS4B/wGwAYYBLgH/AUMBsAEuAf8BQwGwAS4B/wFDAbABLgH/AUMBsAEu
        Af8BqAFOAacB/wHSAWwB0QH/AbwBbgG7Af8B7wGlAe4B/wH7AZ8B+gH/Ae8BnQHuAf8BlwFRAZYB/wF7
        AS0BewH/IAAB2AGbAVsB/wHqAbcBggH/AfsB2AGyAf8B/gHRAaMB/wH7AdgBsgH/Aa8BVgEnAf8BmQEy
        AQAB/wGZATIBAAH/MAADSwF8AfoB9wH0Af8B8AHsAecB/wHvAesB5gH/Ae8B6wHmAf8B9AHwAesB/wHF
        AcMBvwH1A2QBlwMSARgcAAGwAYYBLgH/AfABtwFIAf8B8AG3AUgB/wHwAbcBSAH/AfABtwFIAf8B8AG3
        AUgB/wGwAYYBLgH/AdwBowEZAf8BsAGGAS4B/wwAAacBTwGmAf8BvAFuAbsB/wHvAaUB7gH/AfsBmwH6
        Af8B+wGYAfoB/wH7AZkB+gH/AecBmAHmAf8BkQFNAZAB/yAAAecBswF7Af8B8QHDAZEB/wH+Ac8BnQL/
        Ac0BmQH/Af4B0AGfAf8B+wHYAbIB/wGpAU0BHQH/AZkBMgEAAf8wAANLAXwB/QH8AfkB/wH2AfQB8AH/
        AfUB8gHvAf8B9QHyAe8B/wH7AfcB9AH/AcUBxAHBAfQDbQGUAxgBIhwAAbABhgEuAf8B8QHJAXAB/wHx
        AckBcAH/AfEByQFwAf8B8AHJAXAB/wHxAckBcAH/AbABhgEuAf8B3AGjARkB/wGwAYYBLgH/DAABzwGI
        Ac8B/wHiAa8B4gH/AfsBqwH6Af8B+wGYAfoB/wH7AZgB+gH/AeoBkAHpAf8BzwGIAc8B/ygAAeUBsgF6
        Af8B9AHAAYsC/wHNAZkC/wHNAZkB/wH+AdABoQH/AfIByQGdAf8BsAFZASgB/zAAA00Bfwr/Af4D/wH+
        Bf8BzwHOAc0B9gN0AaADFwEhHAABsAGGAS4B/wHyAeMBqwH/AfIB4wGqAf8B8gHjAasB/wHyAeMBqgH/
        AfIB4wGrAf8BsAGGAS4B/wHcAaMBGQH/AbABhgEuAf8QAAHPAYgBzwH/Ae4BvgHuAf8B+wGuAfoB/wHs
        AZEB6wH/Ac8BiAHPAf8wAAHkAbABeAH/AfYBxAGQAv8BzQGZAf8B8wHCAY4B/wHjAbABeAH/NAADOQFc
        A64B/wPSAf8D0QH/A9AB/wPTAf8DwQH+AYgChwHIAxYBHxwAAbABhgEuAf8B+gH9AeYB/wH6Af0B5gH/
        AfoB/QHmAf8B+gH9AeYB/wH6Af0B5gH/AbABhgEuAf8B3AGjARkB/wGwAYYBLgH/FAABzwGIAc8B/wHj
        AawB4wH/Ac8BiAHPAf84AAHjAa8BdwH/Ae4BvQGKAf8B4wGwAXgB/zwAAyMBMwJsAW0BswO0AfADsAHt
        A7AB7QO6AfUDawHGAwcBCRwAAbABhgEuAf8BsAGGAS4B/wGwAYYBLgH/AbABhgEuAf8BsAGGAS4B/wGw
        AYYBLgH/AbABhgEuAf8B3AGjARkB/wGwAYYBLgH/GAABzwGIAc8B/0AAAeUBsgF8Af+AAAGwAYYBLgH/
        AfIB4wGqAf8B8gHjAaoB/wHyAeMBqgH/AfIB4wGqAf8B8gHjAaoB/wGwAYYBLgH/AbABhgEuAf/kAAGw
        AYYBLgH/AbABhgEuAf8BsAGGAS4B/wGwAYYBLgH/AbABhgEuAf8BsAGGAS4B/wGwAYYBLgH/jAABQgFN
        AT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EAAv8BAAEDBP8BAAEBAQABAQT/BAAE/wQA
        AfcB/wHvAf8EAAHjAf8BxwH/BAABwQH/AYMB/wQAAYAB/wEBAf8BgAEAAYACAAH/AQAB/wHwAQEBwAIA
        Af8BAAH/AfABBwHwAQcBAAH/AQAB/wHwAQcB8AEHAQEB/wGAAf8B8AEHAfABBwGDAf8BwQH/AfABBwHw
        AQcBxwH/AeMB/wH4AQcB8AEHAe8B/wH3A/8B+AEHBv8B/AEHBP8L
</value>
  </data>
</root>